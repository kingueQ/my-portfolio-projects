/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.itson.presentacion;

import com.itson.dominio.Cliente;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.ILogica;
import negocio.LogicaNegocio;

/**
 *
 * @author alexasoto
 */
public class FrmConsulClientes extends javax.swing.JFrame {

    ILogica logica = new LogicaNegocio();
    Cliente cliente;
    
    /**
     * Creates new form FrmConsulClientes
     */
    public FrmConsulClientes() {
                initComponents();
        this.setLocationRelativeTo(null);
        this.llenarTablaClient();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        //Listener para el evento de cierre
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
   
                FrmClientes clientes = new FrmClientes();
                clientes.setVisible(true);
            }
        });
        
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        lblCliente = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        scrlClientes = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlFondo.setBackground(new java.awt.Color(255, 255, 255));
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCliente.setFont(new java.awt.Font("Kannada MN", 0, 20)); // NOI18N
        lblCliente.setText("Consultar clientes");
        pnlFondo.add(lblCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        btnRegresar.setBackground(new java.awt.Color(153, 204, 255));
        btnRegresar.setFont(new java.awt.Font("Kannada MN", 1, 14)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.setFocusable(false);
        btnRegresar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegresar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        pnlFondo.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 100, -1));

        tblClientes.setFont(new java.awt.Font("Kannada MN", 0, 14)); // NOI18N
        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Dirección", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrlClientes.setViewportView(tblClientes);

        pnlFondo.add(scrlClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 400, 210));

        jToolBar1.setBackground(new java.awt.Color(153, 204, 255));
        jToolBar1.setRollover(true);

        btnEditar.setFont(new java.awt.Font("Kannada MN", 0, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnEliminar.setFont(new java.awt.Font("Kannada MN", 0, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        pnlFondo.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 520, 60));

        getContentPane().add(pnlFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        FrmClientes frm = new FrmClientes();
        this.dispose();
        frm.setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int filaSeleccionada = tblClientes.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila antes de editar el cliente.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            
                   // Verificar la contraseña del administrador antes de editar el servicio
        if (!logica.solicitarPass(this)) {
            JOptionPane.showMessageDialog(this, "La contraseña de administrador es incorrecta.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            cliente = logica.buscarCliente(this.obtenerFolio());
            dispose();
            FrmEditarCliente frm = new FrmEditarCliente(cliente);
            frm.setVisible(true);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tblClientes.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila para eliminar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            
                   // Verificar la contraseña del administrador antes de editar el servicio
        if (!logica.solicitarPass(this)) {
            JOptionPane.showMessageDialog(this, "La contraseña de administrador es incorrecta.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            Object id = tblClientes.getValueAt(filaSeleccionada, 0);

            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el servicio?", "Confirmación", JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                boolean eliminado = logica.eliminarServicio((Long) id);
                System.out.println((Long) id);

                if (eliminado) {
                    DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
                    model.removeRow(filaSeleccionada);
                    JOptionPane.showMessageDialog(this, "Registro eliminado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar el registro.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    public void llenarTablaClient() {
        List<Cliente> clientes = logica.recuperarClientes();
        DefaultTableModel modelo = (DefaultTableModel) this.tblClientes.getModel();
        modelo.setRowCount(0);
        for (Cliente cliente : clientes) {
            Object[] filaNueva = {cliente.getId(), cliente.getNombre(), cliente.getDireccion(), cliente.getTelefono()};
            modelo.addRow(filaNueva);
        }
}
        
        public Long obtenerFolio() {
        Long folio = 0L;
        int fila = this.tblClientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se seleccionó ningún servicio");
        } else {
            folio = (Long) this.tblClientes.getValueAt(fila, 0); // Primera columna
        }
        return folio;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JScrollPane scrlClientes;
    private javax.swing.JTable tblClientes;
    // End of variables declaration//GEN-END:variables
}
